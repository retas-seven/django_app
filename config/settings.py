"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from django.contrib.messages import constants as message_constants

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# プロジェクトのフォルダ名
PROJECT_NAME = os.path.basename(BASE_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-$575nf!^z-=x47ewa%#=#i#pz_9e&^n^%l^!^b96#gj+t-*^9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    # django-allauth関連
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    # 独自機能
    'accounts.apps.AccountsConfig',
    'shohin.apps.ShohinConfig',
    'nohin.apps.NohinConfig',
    'app_table.apps.AppTableConfig',
    'app_common.apps.AppCommonConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 共通ミドルウェア
    'app_common.middleware.common_middleware.CommonMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates'),
            # django all-auth用のテンプレート
            os.path.join(BASE_DIR, 'templates', 'allauth'),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

# MySQLの接続設定
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'django_app',
        'USER': 'django_app_user',
        'PASSWORD': 'django_app_user!',
        # 'HOST': '',  # 未設定 (localhostとして扱われる)
        # 'PORT': '',  # 未設定（デフォルトポート（3306）として扱われる）
        'ATOMIC_REQUESTS': True,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'ja'

TIME_ZONE = 'Asia/Tokyo'

USE_I18N = True

USE_L10N = True

# USE_TZ = True
USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

# 静的ファイル格納場所（デバッグ用）
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
# 静的ファイル格納場所（本番用）
STATIC_ROOT = '/home/webims/static'

# 'django.contrib.humanize'のための設定（数値３桁区切りでカンマ）
NUMBER_GROUPING = 3

# メッセージ出力用DIVに適用するCSSクラス
MESSAGE_TAGS = {
    message_constants.SUCCESS: 'alert alert-success alert-dismissible fade show animated fadeInLeftBig',
    message_constants.ERROR: 'alert alert-danger alert-dismissible fade show animated fadeInLeftBig',
}

# ログ出力の設定
os.makedirs('/home/webims', exist_ok=True)
LOGGING = {
    'version': 1,
    'formatters': {
        'middleware_log_formatter': {
            'format': '\t'.join([
                "[%(levelname)s]",
                "%(asctime)s",
                "%(addr)s",
                "%(user)s",
                "%(mothod)s",
                "%(url)s",
                "%(bodyParam)s",
                "%(referer)s",
                "%(message)s",
            ])
        },
    },
    'handlers': {
        'middleware_logfile_handler': {
            'level': 'DEBUG' if DEBUG else 'INFO',
            'class': 'logging.handlers.TimedRotatingFileHandler',
            'filename': '/home/webims/log/application.log',
            'when': 'D',
            'interval': 1,
            'backupCount': 365,
            'formatter': 'middleware_log_formatter',
        },
        'middleware_console_handler': {
            'level': 'DEBUG' if DEBUG else 'CRITICAL',
            'class': 'logging.StreamHandler', 
            'formatter': 'middleware_log_formatter'
        },
    },
    'loggers': {
        'middleware_logger': {
            'handlers': ['middleware_logfile_handler', 'middleware_console_handler'],
            'level': 'DEBUG',
        },
    },
}

#---------------------
# django all-auth関連
#---------------------
AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)
# 認証方式を「メールアドレスとパスワード」に変更
ACCOUNT_AUTHENTICATION_METHOD = 'email'
# ユーザー名は使用しない
ACCOUNT_USERNAME_REQUIRED = False
# ユーザー登録確認メールは送信しない
ACCOUNT_EMAIL_VERIFICATION = 'none'
# メールアドレスを必須項目にする
ACCOUNT_EMAIL_REQUIRED = True
SITE_ID = 1
LOGIN_REDIRECT_URL = 'home'
# ACCOUNT_LOGOUT_REDIRECT_URL = '/accounts/login/'
ACCOUNT_LOGOUT_REDIRECT_URL = 'top'
# ログアウト時、ログアウト画面を経由しない
ACCOUNT_LOGOUT_ON_GET = True
# 未ログインの場合の遷移先
LOGIN_URL = '/accounts/login/'